{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "MatXtndConfirmationDialogService",
            "id": "injectable-MatXtndConfirmationDialogService-f418cff1496b1845317296dfcd02cfb2e6dbeeb838bd28af1f6de687c2c6b6f19dbf9f71578f89ba79dcc84783d0b16f5eb3bdd5b7a99f31942d3c261733f6dd",
            "file": "projects/mat-xtnd/src/lib/dialogs/services/confirmation-dialog.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "OnOk",
                    "args": [
                        {
                            "name": "parms",
                            "type": "MatXtndConfirmationDialogOkParamsType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "MatDialogConfig<MatXtndConfirmationDialogComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ width: '250px', disableClose: true }"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "parms",
                            "type": "MatXtndConfirmationDialogOkParamsType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatDialogConfig<MatXtndConfirmationDialogComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ width: '250px', disableClose: true }",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "OnOkOrCancel",
                    "args": [
                        {
                            "name": "parms",
                            "type": "MatXtndConfirmationDialogParamsType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "MatDialogConfig<MatXtndConfirmationDialogComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ width: '250px', disableClose: true }"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<MatXtndConfirmationDialogActionType>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "parms",
                            "type": "MatXtndConfirmationDialogParamsType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatDialogConfig<MatXtndConfirmationDialogComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ width: '250px', disableClose: true }",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatXtndConfirmationDialogActionType, MatXtndConfirmationDialogActionTypes, MatXtndConfirmationDialogButtonLabelsDefaults, MatXtndConfirmationDialogComponent, MatXtndConfirmationDialogOKButtonLabelsDefaults, MatXtndConfirmationDialogOkParamsType, MatXtndConfirmationDialogParamsType } from '../components';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MatXtndConfirmationDialogService {\r\n\r\n  constructor(private readonly dialog: MatDialog) { }\r\n\r\n  OnOkOrCancel(parms: MatXtndConfirmationDialogParamsType, config: MatDialogConfig<MatXtndConfirmationDialogComponent> = { width: '250px', disableClose: true }): Observable<MatXtndConfirmationDialogActionType> {\r\n    const dialogInstance = this.dialog.open(MatXtndConfirmationDialogComponent, {\r\n      ...config,\r\n      data: { ...parms, buttonLabels: (parms.buttonLabels || MatXtndConfirmationDialogButtonLabelsDefaults)}\r\n    })\r\n    return dialogInstance.afterClosed().pipe(filter(x => !!x))\r\n  }\r\n\r\n  OnOk(parms: MatXtndConfirmationDialogOkParamsType, config: MatDialogConfig<MatXtndConfirmationDialogComponent> = { width: '250px', disableClose: true }): Observable<void> {\r\n    const dialogInstance = this.dialog.open(MatXtndConfirmationDialogComponent, {\r\n      ...config,\r\n      data: { ...parms, buttonLabels: (parms.buttonLabels || MatXtndConfirmationDialogOKButtonLabelsDefaults) }\r\n    })\r\n    return dialogInstance.afterClosed().pipe(filter(x => x === MatXtndConfirmationDialogActionTypes.OK))\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MatXtndCssInjectorService",
            "id": "injectable-MatXtndCssInjectorService-f2a8bbcc7ff96b3b56e4c6ad2534a51c5575423e706ffefee32b53cf79cedb881308372c468ef67344b9ebb2c578b9c7cd3b5ebdc9fa4fe1392e21ba06edeb41",
            "file": "projects/mat-xtnd/src/lib/utils/services/css-injector.service.ts",
            "properties": [
                {
                    "name": "renderer2",
                    "defaultValue": "this.rendererFactory.createRenderer(null, null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "fromSource",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "src",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "src",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "",
            "sourceCode": "import { DOCUMENT } from \"@angular/common\";\r\nimport { Injectable, RendererFactory2, Inject, Renderer2 } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n/** @dynamic */\r\n@Injectable()\r\nexport class MatXtndCssInjectorService {\r\n\r\n  readonly renderer2: Renderer2 = this.rendererFactory.createRenderer(null, null);\r\n\r\n  constructor(\r\n    private readonly rendererFactory: RendererFactory2,\r\n    @Inject(DOCUMENT) private readonly document: Document\r\n  ) { }\r\n\r\n  fromSource(key: string, src: string): Observable<void> {\r\n\r\n    return new Observable((sub) => {\r\n      const link = this.document.createElement(\"link\");\r\n      link.href = src;\r\n      link.id = key;\r\n      link.rel = \"stylesheet\";\r\n      link.onload = () => {\r\n        sub.next();\r\n        sub.complete();\r\n      }\r\n      this.renderer2.appendChild(this.document.body, link);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MatXtndScriptInjectorService",
            "id": "injectable-MatXtndScriptInjectorService-78a82975a2c1b85ee1e0897f099bf6ad58568e5e15a81814b2d168ff6af0fbdf7ba46c6a8f1771c3695c2a62a40d5efcea3a8c7df5b0fbff25c8a594a84161f8",
            "file": "projects/mat-xtnd/src/lib/utils/services/script-injector.service.ts",
            "properties": [
                {
                    "name": "renderer2",
                    "defaultValue": "this.rendererFactory.createRenderer(null, null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "fromSource",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "src",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "src",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasScript",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "",
            "sourceCode": "import { DOCUMENT } from \"@angular/common\";\r\nimport { Inject, Injectable, Renderer2, RendererFactory2 } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n/** @dynamic */\r\n@Injectable()\r\nexport class MatXtndScriptInjectorService {\r\n\r\n  readonly renderer2: Renderer2 = this.rendererFactory.createRenderer(null, null);\r\n\r\n  constructor(\r\n    private readonly rendererFactory: RendererFactory2,\r\n    @Inject(DOCUMENT) private readonly document: Document\r\n  ) { }\r\n\r\n  hasScript(key: string) {\r\n    const script = this.document.getElementById(key);\r\n    return !!script;\r\n  }\r\n\r\n  fromSource(key: string, src: string): Observable<void> {\r\n\r\n    return new Observable((sub) => {\r\n      const script = this.document.createElement(\"script\");\r\n      script.id = key;\r\n      script.type = \"text/javascript\";\r\n      script.src = src;\r\n      script.onload = () => {\r\n        sub.next();\r\n        sub.complete();\r\n      }\r\n      this.renderer2.appendChild(this.document.body, script);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MatXtndSnackbarSuccessService",
            "id": "injectable-MatXtndSnackbarSuccessService-7e73eb6e1ed0490b66ce76b198f7354f29c78861fd45396dfc12f76a1950caf12ceefda1970f66376b825d28463dcb1aab3e37092089a18d5d79ba8057c5e823",
            "file": "projects/mat-xtnd/src/lib/snackbar-success/services/snackbar-success.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "Open",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ duration: 3000, horizontalPosition: 'right', verticalPosition:'bottom'}"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ duration: 3000, horizontalPosition: 'right', verticalPosition:'bottom'}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { MatXtndSnackbarSuccessComponent } from '../components';\r\n\r\n@Injectable()\r\nexport class MatXtndSnackbarSuccessService {\r\n\r\n  constructor(private readonly snackbar: MatSnackBar) { }\r\n\r\n  Open(message: string, config: MatSnackBarConfig = { duration: 3000, horizontalPosition: 'right', verticalPosition:'bottom'}) {\r\n    this.snackbar.openFromComponent(MatXtndSnackbarSuccessComponent, <MatSnackBarConfig>{\r\n      data: { message },\r\n      panelClass: `matxtnd-snackbar-success-panel`,\r\n      ...config\r\n    })\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MatXtndThemeColorFinderService",
            "id": "injectable-MatXtndThemeColorFinderService-3626e36abb833a840722c938557d17b6d3482b4bab7cc1e9df330d5ef9d33685d13565fcfc6d7ef398360678fa87d64a7876e39e3b46f48010d99379d4e276db",
            "file": "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts",
            "properties": [
                {
                    "name": "colors",
                    "defaultValue": "{ primary: '', accent: '', warn: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatXtndMaterialColorValueType",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "fetchColors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "",
            "sourceCode": "import { Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { MatXtndThemeHelperComponent } from '../components';\r\n\r\nexport type MatXtndMaterialColorType = \"primary\" | \"accent\" | \"warn\";\r\nexport type MatXtndMaterialColorValueType = { [key in MatXtndMaterialColorType]: string }\r\n\r\n/** @dynamic */\r\n@Injectable()\r\nexport class MatXtndThemeColorFinderService {\r\n\r\n  colors: MatXtndMaterialColorValueType = { primary: '', accent: '', warn: '' };\r\n\r\n  constructor(\r\n    private readonly overlay: Overlay,\r\n    @Inject(DOCUMENT) private readonly document: Document\r\n  ) {\r\n    this.initOverlay();\r\n  }\r\n\r\n  initOverlay() {\r\n    const overlayref = this.overlay.create();\r\n    const fpp = new ComponentPortal(MatXtndThemeHelperComponent);\r\n    overlayref.attach(fpp);\r\n    this.fetchColors();\r\n  }\r\n\r\n  fetchColors() {\r\n    const comp = this.document.querySelector('matxtnd-theme-helper');\r\n    const primary = comp?.querySelector('[color=\"primary\"]');\r\n    const accent = comp?.querySelector('[color=\"accent\"]');\r\n    const warn = comp?.querySelector('[color=\"warn\"]');\r\n\r\n    if (primary && accent && warn) {\r\n      this.colors = {\r\n        primary: getComputedStyle(primary).backgroundColor,\r\n        accent: getComputedStyle(accent).backgroundColor,\r\n        warn: getComputedStyle(warn).backgroundColor\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-109220fc7497ab7842c952951bfa0e2d57d097208f6fddde35f6ed1e1df74dbb61a1cbbdf4a91ae77ccfaa48608928a10c848c79409430261ce848102acbb429",
            "file": "projects/integration/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'integration'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "confirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "successSnackbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MatXtndConfirmationDialogService } from '../../../mat-xtnd/src/lib/dialogs/services/confirmation-dialog.service';\r\nimport { MatXtndSnackbarSuccessService } from '../../../mat-xtnd/src/lib/snackbar-success';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'integration';\r\n  constructor(\r\n    private readonly snackbarSuccessStatus: MatXtndSnackbarSuccessService,\r\n    private readonly confirmationDialog: MatXtndConfirmationDialogService,\r\n  ) { }\r\n\r\n  successSnackbar() {\r\n    this.snackbarSuccessStatus.Open('Activity Completed');\r\n  }\r\n\r\n  confirm() {\r\n    this.confirmationDialog.OnOkOrCancel({ title: 'Confirm', message: 'Are you sure you want to do this?' })\r\n      .subscribe(response => console.log(response));      ;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbarSuccessStatus",
                        "type": "MatXtndSnackbarSuccessService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationDialog",
                        "type": "MatXtndConfirmationDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "snackbarSuccessStatus",
                        "type": "MatXtndSnackbarSuccessService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationDialog",
                        "type": "MatXtndConfirmationDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "\r\n<!--<matxtnd-loading-button mat-raised-button [busy]=\"true\">\r\n  <matxtnd-loading-button-ready>\r\n    Update\r\n  </matxtnd-loading-button-ready>\r\n  <matxtnd-loading-button-busy>\r\n    Updating...\r\n  </matxtnd-loading-button-busy>\r\n</matxtnd-loading-button>\r\n\r\n\r\n<matxtnd-loading-message>\r\n  Loading...\r\n</matxtnd-loading-message>\r\n\r\n<matxtnd-swoosh-animation></matxtnd-swoosh-animation>\r\n\r\n<button mat-button color=\"primary\" (click)=\"successSnackbar()\">Display Success SnackBar</button>\r\n\r\n<button mat-button color=\"primary\" (click)=\"confirm()\">Display Dialog</button>-->\r\n"
        },
        {
            "name": "DialogsComponent",
            "id": "component-DialogsComponent-d5e008cb2ca7709adc0eef2c89af3405f2f2d1ca6430d73048b65e1342fad9383bbdbcfa168c9da3ad3196e151013168f8d405c8af93e4b85571cddf61b79ae6",
            "file": "stories/examples/dialogs/dialogs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialogs",
            "styleUrls": [
                "dialogs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "dialogs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "message",
                    "defaultValue": "`\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n  `",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOk message\n",
                    "description": "<p>Ok message</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Heading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOk message\n",
                    "description": "<p>Ok message</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatXtndConfirmationDialogService } from '@matxtnd'\r\n\n@Component({\n  selector: 'dialogs',\n  templateUrl: 'dialogs.component.html',\n  styleUrls: [`dialogs.component.scss`]\n})\nexport class DialogsComponent {\n\n  /**\n * Ok message\n */\n  @Input() title: string = 'Heading';\n\n  /**\n   * Ok message\n   */\n  @Input() message: string = `\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n  `;\n\n  constructor(private readonly confirmationDialog: MatXtndConfirmationDialogService) { }\n\n  openDialog() {\n    this.confirmationDialog.OnOkOrCancel({ title: this.title,  message: this.message });\r\n\r\n  }\n  \n} \n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "dialogs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationDialog",
                        "type": "MatXtndConfirmationDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "confirmationDialog",
                        "type": "MatXtndConfirmationDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "\r\n<button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Open dialog</button>\r\n"
        },
        {
            "name": "LoadingButtonComponent",
            "id": "component-LoadingButtonComponent-446fc05074c8ae698f240c56eccb5e686daec005960b501f2d81bd09d3841cdc99322ede0958fdabe48f6430e7a4276dd23a58b3aab65f85002b5579accca67b",
            "file": "stories/examples/loading-button/loading-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "loading-button",
            "styleUrls": [
                "loading-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "loading-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "busy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBusy State (NgParam)\n",
                    "description": "<p>Busy State (NgParam)</p>\n",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "buttonLoadingText",
                    "defaultValue": "'Updating...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nButton Loading State Text  Text\n",
                    "description": "<p>Button Loading State Text  Text</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonText",
                    "defaultValue": "'Update'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nButton Text\n",
                    "description": "<p>Button Text</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaterial Color (NgParam)\n",
                    "description": "<p>Material Color (NgParam)</p>\n",
                    "line": 18,
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\ndisabled (NgParam)\n",
                    "description": "<p>disabled (NgParam)</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'loading-button',\r\n  templateUrl: 'loading-button.component.html',\r\n  styleUrls: [`loading-button.component.scss`],\r\n})\r\nexport class LoadingButtonComponent {\r\n\r\n  /**\r\n  * Busy State (NgParam)\r\n  */\r\n  @Input() busy = false;\r\n\r\n  /**\r\n  * Material Color (NgParam)\r\n  */\r\n  @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\r\n\r\n  /**\r\n* disabled (NgParam)\r\n*/\r\n  @Input() disabled: boolean = false;\r\n\r\n  /**\r\n* Button Text\r\n*/\r\n  @Input() buttonText = 'Update';\r\n\r\n    /**\r\n* Button Loading State Text  Text\r\n*/\r\n@Input() buttonLoadingText = 'Updating...';\r\n\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n",
                    "styleUrl": "loading-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<matxtnd-loading-button mat-raised-button [busy]=\"busy\" [color]=\"color\" [disabled]=\"disabled\">\r\n  <matxtnd-loading-button-ready>\r\n    {{buttonText}}\r\n  </matxtnd-loading-button-ready>\r\n  <matxtnd-loading-button-busy>\r\n    {{buttonLoadingText}}\r\n  </matxtnd-loading-button-busy>\r\n</matxtnd-loading-button>\r\n"
        },
        {
            "name": "LoadingMessageComponent",
            "id": "component-LoadingMessageComponent-4448a8ffcaa54b861b3b6e95471d879b4f1b82c99e8dfeaca4ca4946ab99ee48562fa5abb31f5401bee354e553380fc8cecbdbe7af43951c93c3a95639fb1886",
            "file": "stories/examples/loading-message/loading-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "loading-message",
            "styleUrls": [
                "loading-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "loading-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "\"primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaterial Color (NgParam)\n",
                    "description": "<p>Material Color (NgParam)</p>\n",
                    "line": 13,
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "decorators": []
                },
                {
                    "name": "diameter",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDiameter of the Loading Animation (NgParam)\n",
                    "description": "<p>Diameter of the Loading Animation (NgParam)</p>\n",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "loadingMessage",
                    "defaultValue": "'Loading...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoading message\n",
                    "description": "<p>Loading message</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStroke Width of the Loading Animation (NgParam)\n",
                    "description": "<p>Stroke Width of the Loading Animation (NgParam)</p>\n",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'loading-message',\r\n  templateUrl: 'loading-message.component.html',\r\n  styleUrls: [`loading-message.component.scss`]\r\n})\r\nexport class LoadingMessageComponent {\r\n\r\n   /**\r\n   * Material Color (NgParam)\r\n   */\r\n  @Input() color: 'primary' | 'accent' | 'warn' = \"primary\";\r\n  /**\r\n  * Diameter of the Loading Animation (NgParam)\r\n  */\r\n  @Input() diameter: number = 30;\r\n  /**\r\n  * Stroke Width of the Loading Animation (NgParam)\r\n  */\r\n  @Input() strokeWidth: number = 2;\r\n\r\n  /**\r\n  * Loading message\r\n  */\r\n  @Input() loadingMessage: string = 'Loading...';\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "loading-message.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<matxtnd-loading-message [color]=\"color\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\">\r\n  {{loadingMessage}}\r\n</matxtnd-loading-message>\r\n"
        },
        {
            "name": "MatXtndBusyComponent",
            "id": "component-MatXtndBusyComponent-a52c806bda1a46392fafe210e5b029dd2d8986f50f4842a550c25f7f4f90149911bf5ec78000cbeda8317f872149701307e48dd5f7b961ddf5da6bded98d73cf",
            "file": "projects/mat-xtnd/src/lib/loading-button/busy/busy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-loading-button-busy",
            "styleUrls": [
                "busy.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "busy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "parentContext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatXtndLoadingButtonComponent",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Host",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Host } from '@angular/core';\r\nimport { MatXtndLoadingButtonComponent } from '../loading-button.component';\r\n\r\n@Component({\r\n  selector: 'matxtnd-loading-button-busy',\r\n  templateUrl: 'busy.component.html',\r\n  styleUrls: [`busy.component.scss`]\r\n})\r\nexport class MatXtndBusyComponent {\r\n\r\n  constructor(@Host() public parentContext: MatXtndLoadingButtonComponent) { }\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  .busy-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    .busy-container-loading {\r\n      height: 20px;\r\n      padding: 7px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "busy.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentContext",
                        "type": "MatXtndLoadingButtonComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "parentContext",
                        "type": "MatXtndLoadingButtonComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<span class=\"busy-container\" *ngIf=\"parentContext.busy\">\r\n  <ng-content></ng-content>\r\n  <span class=\"busy-container-loading\">\r\n    <mat-progress-spinner mode=\"indeterminate\" [diameter]=\"20\" [strokeWidth]=\"2\"></mat-progress-spinner>\r\n  </span>\r\n</span>\r\n"
        },
        {
            "name": "MatXtndConfirmationDialogComponent",
            "id": "component-MatXtndConfirmationDialogComponent-dcd748cd75c7dcd69d9db6970e031dc2100a43cd24ad6f0665e918ea458a1d064b70e4351aa10d2dc3dbe3e37c75c1fdbdd3ac1d48aa9ed9f227ec8f880235a5",
            "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-confirmation-dialog",
            "styleUrls": [
                "confirmation-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "confirmation-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatXtndConfirmationDialogParamsDataType",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ok",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Inject, NgZone } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport type MatXtndConfirmationDialogActionType = \"OK\" | \"CANCEL\";\r\nexport const MatXtndConfirmationDialogActionTypes: { [key in MatXtndConfirmationDialogActionType]: MatXtndConfirmationDialogActionType } = { OK: \"OK\", CANCEL: \"CANCEL\"}\r\nexport const MatXtndConfirmationDialogButtonLabelsDefaults: { [key in MatXtndConfirmationDialogActionType]: string } = { OK: \"Ok\", CANCEL: \"Cancel\" }\r\nexport type MatXtndConfirmationDialogButtonLabelsType = { OK: string, CANCEL: string }\r\n\r\nexport type MatXtndConfirmationDialogParamsType = { title?: string, message: string, buttonLabels?: MatXtndConfirmationDialogButtonLabelsType }\r\nexport type MatXtndConfirmationDialogParamsDataType = { title?: string, message: string, buttonLabels: MatXtndConfirmationDialogButtonLabelsType }\r\n\r\nexport const MatXtndConfirmationDialogOKButtonLabelsDefaults = { OK: \"Ok\" }\r\nexport type MatXtndConfirmationDialogOkButtonLabelsType = { OK: string }\r\nexport type MatXtndConfirmationDialogOkParamsType = { title?: string, message: string, buttonLabels?: MatXtndConfirmationDialogOkButtonLabelsType }\r\n\r\n\r\n/** @dynamic */\r\n@Component({\r\n  selector: 'matxtnd-confirmation-dialog',\r\n  templateUrl: 'confirmation-dialog.component.html',\r\n  styleUrls: [`confirmation-dialog.component.scss`]\r\n})\r\nexport class MatXtndConfirmationDialogComponent {\r\n\r\n  constructor(\r\n    private readonly ngZone: NgZone,\r\n    private readonly matDialogRef: MatDialogRef<MatXtndConfirmationDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public readonly data: MatXtndConfirmationDialogParamsDataType,\r\n  ) { }\r\n\r\n  ok() {\r\n    this.ngZone.run(() => {\r\n      this.matDialogRef.close(MatXtndConfirmationDialogActionTypes.OK);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.ngZone.run(() => {\r\n      this.matDialogRef.close(MatXtndConfirmationDialogActionTypes.CANCEL);\r\n    });\r\n  }\r\n\r\n} \r\n\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  .matxtnd-confirmation-dialog-actions{\r\n      display:flex;\r\n      justify-content:flex-end;\r\n  }\r\n}\r\n",
                    "styleUrl": "confirmation-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<MatXtndConfirmationDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "MatXtndConfirmationDialogParamsDataType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialogRef",
                        "type": "MatDialogRef<MatXtndConfirmationDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "MatXtndConfirmationDialogParamsDataType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-container *ngIf=\"data.title\">\r\n  <h1 mat-dialog-title class=\"\">{{data.title}}</h1>\r\n</ng-container>\r\n<div mat-dialog-content class=\"\">\r\n  {{data.message}}\r\n</div>\r\n<div mat-dialog-actions class=\"matxtnd-confirmation-dialog-actions\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"ok()\" cdkFocusInitial>{{data.buttonLabels.OK}}</button>\r\n  <ng-container *ngIf=\"!!data.buttonLabels.CANCEL\">\r\n    <button mat-raised-button (click)=\"cancel()\">{{data.buttonLabels.CANCEL}}</button>\r\n  </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "MatXtndLoadingButtonComponent",
            "id": "component-MatXtndLoadingButtonComponent-7366a971f0d44fa1f3e783d93754299f008f3d5ba99a412ecc9ae3ea86941987befdf0c598a179a7bc89854bd060caf6b9724f6c13f6d667d7ae4007ac4776c9",
            "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-loading-button",
            "styleUrls": [
                "loading-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "loading-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "busy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "BooleanInput",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "\"primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "BooleanInput",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<LoadingBtnResponse>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter<LoadingBtnResponse>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_busy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "additionalCssClass",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "buttonType",
                    "defaultValue": "\"button\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonTypes",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "$event",
                            "type": "LoadingBtnResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "LoadingBtnResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\ntype LoadingBtnResponse = any;\r\ntype ButtonTypes = \"button\" | \"submit\" | \"reset\";\r\n\r\nconst materialButtonAttrs = [\r\n  'mat-button',\r\n  'mat-raised-button',\r\n  'mat-icon-button',\r\n  'mat-fab',\r\n  'mat-mini-fab'\r\n];\r\n\r\n@Component({\r\n  selector: 'matxtnd-loading-button',\r\n  templateUrl: 'loading-button.component.html',\r\n  styleUrls: [`loading-button.component.scss`]\r\n})\r\nexport class MatXtndLoadingButtonComponent {\r\n\r\n  private _busy = false;\r\n  private _disabled = false;\r\n\r\n  @Input() color: ThemePalette = \"primary\";\r\n\r\n  @Input() set busy(value: BooleanInput) {\r\n    this._busy = coerceBooleanProperty(value);\r\n  }\r\n  get busy() { return this._busy; }\r\n\r\n  @Input() set disabled(value: BooleanInput) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  get disabled() { return this._disabled; }\r\n\r\n  @Output() submit: EventEmitter<LoadingBtnResponse> = new EventEmitter<LoadingBtnResponse>();\r\n\r\n  buttonType: ButtonTypes = \"button\";\r\n  additionalCssClass: string  = \"\";\r\n\r\n  constructor(element: ElementRef) {\r\n    const nativeEl = element.nativeElement as HTMLElement;\r\n\r\n    materialButtonAttrs.forEach((attr, index) => {\r\n      if (nativeEl.hasAttribute(attr)) {\r\n        this.additionalCssClass = `${attr} ${this.additionalCssClass}`\r\n      }\r\n    })\r\n\r\n    if (nativeEl.hasAttribute('type')) {\r\n      this.buttonType = nativeEl.getAttribute('type') as ButtonTypes;\r\n    }\r\n  }\r\n\r\n\r\n  click($event: LoadingBtnResponse) {\r\n    this.submit.emit($event)\r\n  }\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  -webkit-appearance: none !important;\r\n}\r\n\r\nbutton[type=\"button\"] {\r\n  -webkit-appearance: none;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  -webkit-appearance: none;\r\n}\r\n",
                    "styleUrl": "loading-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "busy": {
                    "name": "busy",
                    "setSignature": {
                        "name": "busy",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 28,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "busy",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                },
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 33,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabled",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "templateData": "<button [disabled]=\"busy || disabled\" (click)=\"click($event)\"\r\n        [ngClass]=\"additionalCssClass\"\r\n        mat-button\r\n        [attr.type]=\"buttonType\"\r\n        [color]=\"color\">\r\n  <ng-content></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "MatXtndLoadingMessageComponent",
            "id": "component-MatXtndLoadingMessageComponent-349ccdeca0639d14e67f14e7a04f7337c5444dc5e40612c9ee4aef20493be1860f6f6356fdc6cc9b3e423467d2e8e0b81ee5832771233f94ff6cfc587a623943",
            "file": "projects/mat-xtnd/src/lib/loading-message/loading-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-loading-message",
            "styleUrls": [
                "loading-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "loading-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "\"primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "diameter",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'matxtnd-loading-message',\r\n  templateUrl: 'loading-message.component.html',\r\n  styleUrls: [`loading-message.component.scss`]\r\n})\r\nexport class MatXtndLoadingMessageComponent {\r\n\r\n  @Input() color: ThemePalette = \"primary\";\r\n  @Input() diameter: number = 30;\r\n  @Input() strokeWidth: number = 2;\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .matxtnd-loading-message-content{\r\n      padding:20px;\r\n  }\r\n}\r\n",
                    "styleUrl": "loading-message.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"matxtnd-loading-message-signal\">\r\n  <mat-progress-spinner mode=\"indeterminate\" [color]=\"color\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\"></mat-progress-spinner>\r\n</div>\r\n<div class=\"matxtnd-loading-message-content\">\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "MatXtndReadyComponent",
            "id": "component-MatXtndReadyComponent-c94bc8e28336cadf1c6decd5675da8359dd4adc27f916f8d8b2418a90419c30d79fc8ae0511b7c9eba992d2d6674568c89327f86ec7fa62a263657a4616740a0",
            "file": "projects/mat-xtnd/src/lib/loading-button/ready/ready.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-loading-button-ready",
            "styleUrls": [
                "ready.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "ready.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "parentContext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatXtndLoadingButtonComponent",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Host",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Host } from '@angular/core';\r\nimport { MatXtndLoadingButtonComponent } from '../loading-button.component';\r\n\r\n@Component({\r\n  selector: 'matxtnd-loading-button-ready',\r\n  templateUrl: 'ready.component.html',\r\n  styleUrls: [`ready.component.scss`]\r\n})\r\nexport class MatXtndReadyComponent {\r\n\r\n  constructor(@Host() public parentContext: MatXtndLoadingButtonComponent) { }\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  .ready-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    ::ng-deep mat-icon {\r\n      margin: 6px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "ready.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentContext",
                        "type": "MatXtndLoadingButtonComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "parentContext",
                        "type": "MatXtndLoadingButtonComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<span class=\"ready-container\" *ngIf=\"!parentContext.busy\">\r\n  <ng-content></ng-content>\r\n</span>\r\n"
        },
        {
            "name": "MatXtndSnackbarSuccessComponent",
            "id": "component-MatXtndSnackbarSuccessComponent-8c6a69fea30c4b5d67e14704630725303a78002679eaa5385fc3211c13a448d14d10ddf2bd030ae24c741ec288c244f85ea81867bfee867c22e4a89c1d761077",
            "file": "projects/mat-xtnd/src/lib/snackbar-success/components/snackbar-success/snackbar-success.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-snackbar-success",
            "styleUrls": [
                "snackbar-success.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "snackbar-success.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\nexport type MatXtndSuccessSnackBarType = { message: string; }\r\n\r\n/** @dynamic */\r\n@Component({\r\n  selector: 'matxtnd-snackbar-success',\r\n  templateUrl: 'snackbar-success.component.html',\r\n  styleUrls: [`snackbar-success.component.scss`]\r\n})\r\nexport class MatXtndSnackbarSuccessComponent {\r\n\r\n  message: string;\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) private readonly data: MatXtndSuccessSnackBarType) {\r\n    this.message = data.message;\r\n  }\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n\r\n  .matxtnd-snackbar-success-container {\r\n    height: 25px;\r\n\r\n    .matxtnd-snackbar-success-signal {\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 16px;\r\n      left: 16px;\r\n    }\r\n\r\n    .matxtnd-snackbar-message {\r\n      padding: 10px;\r\n      position: absolute;\r\n      left: 50px;\r\n      top: 9px;\r\n      color: rgba(0,0,0,.7);\r\n    }\r\n  }\r\n}\r\n\r\n::ng-deep {\r\n  .matxtnd-snackbar-success-panel{\r\n      background-color:#fff;\r\n  }\r\n}\r\n",
                    "styleUrl": "snackbar-success.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "MatXtndSuccessSnackBarType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "MatXtndSuccessSnackBarType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"matxtnd-snackbar-success-container\">\r\n  <span class=\"matxtnd-snackbar-success-signal\">\r\n    <matxtnd-swoosh-animation></matxtnd-swoosh-animation>\r\n  </span>\r\n  <span class=\"matxtnd-snackbar-message\" [innerHtml]=\"message\"></span>\r\n</div>\r\n"
        },
        {
            "name": "MatXtndSwooshAnimationComponent",
            "id": "component-MatXtndSwooshAnimationComponent-99469e24dca6ca89e2cb62632379728dd7cb17987baadfe2d419ca21a982352b6d967cf3ff10c08f98ac3e5e381af2765168dfe54d4ab1e9530e4d379d497c06",
            "file": "projects/mat-xtnd/src/lib/snackbar-success/components/swoosh-animation/swoosh-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-swoosh-animation",
            "styleUrls": [
                "swoosh-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "swoosh-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "this.matXtndThemeService.colors.primary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "play-after",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "speed",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "35",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "canvas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLCanvasElement | undefined",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "Play",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ElementRef, Input } from '@angular/core';\r\nimport { MatXtndThemeColorFinderService } from '../../../utils';\r\n\r\n@Component({\r\n  selector: 'matxtnd-swoosh-animation',\r\n  templateUrl: 'swoosh-animation.component.html',\r\n  styleUrls: [`swoosh-animation.component.scss`]\r\n})\r\nexport class MatXtndSwooshAnimationComponent implements OnInit {\r\n\r\n  private canvas: HTMLCanvasElement | undefined;\r\n\r\n  @Input() color: string = this.matXtndThemeService.colors.primary;\r\n  @Input() speed: number = 3;\r\n  @Input() width: number = 35;\r\n  @Input('play-after') playAfter: number = 250;\r\n\r\n  constructor(\r\n    private readonly element: ElementRef<HTMLElement>,\r\n    private readonly matXtndThemeService: MatXtndThemeColorFinderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.canvas = document.createElement('canvas');\r\n    const width = this.width;\r\n    const height = width * 3.2;\r\n    this.canvas.height = 160;\r\n    this.canvas.style.width = width + 'px';\r\n    const playAfter = this.playAfter || 2000;\r\n\r\n    this.element.nativeElement.appendChild(this.canvas);\r\n    setTimeout(this.Play.bind(this), playAfter);\r\n  }\r\n\r\n  Play() {\r\n    const color = (this.color || 'rgba(0, 150, 0, 1)');\r\n    const speed = (this.speed || 5)\r\n\r\n    let start = 100;\r\n    let mid = 145;\r\n    let end = 250;\r\n    let width = 20;\r\n    let leftX = start;\r\n    let leftY = start;\r\n    let rightX = mid - (width / 2.7);\r\n    let rightY = mid + (width / 2.7);\r\n    let animationSpeed = speed;\r\n\r\n    let ctx = this.canvas?.getContext('2d');\r\n    if (ctx) {\r\n      ctx.lineWidth = width;\r\n      ctx.strokeStyle = color;\r\n\r\n      for (let i = start; i < mid; i++) {\r\n        const drawLeft = window.setTimeout(function () {\r\n          if (ctx) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(start, start);\r\n            ctx.lineTo(leftX, leftY);\r\n            ctx.stroke();\r\n          }\r\n          leftX++;\r\n          leftY++;\r\n        }, 1 + (i * animationSpeed) / 3);\r\n      }\r\n\r\n      for (let i = mid; i < end; i++) {\r\n        const drawRight = window.setTimeout(function () {\r\n          if (ctx) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(leftX, leftY);\r\n            ctx.lineTo(rightX, rightY);\r\n            ctx.stroke();\r\n          }\r\n          rightX++;\r\n          rightY--;\r\n        }, 1 + (i * animationSpeed) / 3);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "swoosh-animation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matXtndThemeService",
                        "type": "MatXtndThemeColorFinderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matXtndThemeService",
                        "type": "MatXtndThemeColorFinderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "MatXtndThemeHelperComponent",
            "id": "component-MatXtndThemeHelperComponent-eefb1f69a3a9ba5df8fb2f3ffeaca184291bbe7089ce5d2b9f4c40606087974e539a5594efba35acf8d54dc4d1beabb51cb5b0559e2fb36546770a131f213931",
            "file": "projects/mat-xtnd/src/lib/utils/components/theme-helper/theme-helper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "matxtnd-theme-helper",
            "styleUrls": [
                "theme-helper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "theme-helper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'matxtnd-theme-helper',\r\n  templateUrl: 'theme-helper.component.html',\r\n  styleUrls: [`theme-helper.component.scss`]\r\n})\r\nexport class MatXtndThemeHelperComponent {\r\n\r\n} \r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    display:none;\r\n}\r\n",
                    "styleUrl": "theme-helper.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button mat-raised-button color=\"primary\">P</button>\r\n<button mat-raised-button color=\"accent\">A</button>\r\n<button mat-raised-button color=\"warn\">W</button>\r\n"
        },
        {
            "name": "SnackbarSuccessComponent",
            "id": "component-SnackbarSuccessComponent-61150f803ca8536a34df32c9165d1b22c91e4c5e96fe1731431c9b9467e0e0371961598151d1b1a40a9f88e5fbab5094f957064bb026c327173855e7762aaf0a",
            "file": "stories/examples/snackbar-success/snackbar-success.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "snackbar-success",
            "styleUrls": [
                "snackbar-success.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "snackbar-success.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "snackbarMessage",
                    "defaultValue": "'Action Completed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoading message\n",
                    "description": "<p>Loading message</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "do",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatXtndSnackbarSuccessService } from '@matxtnd'\n\n@Component({\n  selector: 'snackbar-success',\n  templateUrl: 'snackbar-success.component.html',\n  styleUrls: [`snackbar-success.component.scss`]\n})\nexport class SnackbarSuccessComponent {\n\n  /**\n  * Loading message\n  */\n  @Input() snackbarMessage: string = 'Action Completed';\n\n  constructor(private readonly snackbarSuccessService: MatXtndSnackbarSuccessService) { }\n\n  do() {\n    this.snackbarSuccessService.Open(this.snackbarMessage);\r\n  }\n\n\n} \n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "snackbar-success.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbarSuccessService",
                        "type": "MatXtndSnackbarSuccessService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "snackbarSuccessService",
                        "type": "MatXtndSnackbarSuccessService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "\r\n<button mat-raised-button color=\"primary\" (click)=\"do()\">Display Success Snackbar</button>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-3b8353e5470df2cb92d5ab8a428afc462208d9b2a3d76d3437fafb72f8195c94f4d751ea3a2d12f315b6d1226191ba98a1a00fb1d2e4119c8efe043c742248f1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/integration/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatXtndModule } from '../../../mat-xtnd/src/lib/mat-xtnd.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    MatXtndModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MatXtndModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-ec875f2a3fdf93146523093864965ddb9c2285cfcf8084c052b39e056320db40c72937ff6381ddd58b2d6bb429335c074b2f6c5b5bdcb57b34ac9d5ae5b1ce15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "stories/modules/material/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatSliderModule } from '@angular/material/slider'\r\n\r\n\r\nconst components = [\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatToolbarModule,\r\n  MatProgressSpinnerModule,\r\n  MatBadgeModule,\r\n  MatTooltipModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatExpansionModule,\r\n  MatTreeModule,\r\n  MatFormFieldModule,\r\n  MatSliderModule\r\n];\r\n\r\n@NgModule({\r\n  imports: components,\r\n  exports: components\r\n})\r\n\r\nexport class MaterialModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MatXtnDialogsModule",
            "id": "module-MatXtnDialogsModule-72979ac569832d373e4bf12a24b6d13c37132dbed128c9542de5564d86258936f7622d56b34b934348561f6db75dd7203f619e720b91f4e05a03b0af60846bef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/mat-xtnd/src/lib/dialogs/dialogs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatXtndConfirmationDialogComponent } from './components';\r\nimport { MatXtndConfirmationDialogService } from './services';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatDialogModule\r\n    ],\r\n    declarations: [\r\n        MatXtndConfirmationDialogComponent\r\n    ],\r\n    exports: [\r\n        MatXtndConfirmationDialogComponent\r\n    ],\r\n    providers: [\r\n        MatXtndConfirmationDialogService\r\n    ]\r\n})\r\nexport class MatXtnDialogsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MatXtndConfirmationDialogService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MatXtndConfirmationDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MatXtndConfirmationDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MatXtndModule",
            "id": "module-MatXtndModule-32587190a8e2a8c4943ffa76aa27267d5f1bbefead45b16dc7e27cb3ab9c3f0ce1492aa69a653580ba89f12fc9bd6adc4eb6cc945c6d18898f5ff015daea83d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/mat-xtnd/src/lib/mat-xtnd.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MatXtnDialogsModule } from './dialogs';\r\nimport { MatXtnLoadingButtonModule } from './loading-button';\r\nimport { MatXtnLoadingMessageModule } from './loading-message';\r\nimport { MatXtnSnackbarSuccessModule } from './snackbar-success';\r\nimport { MatXtnUtilsModule } from './utils';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatXtnLoadingButtonModule,\r\n    MatXtnLoadingMessageModule,\r\n    MatXtnDialogsModule,\r\n    MatXtnUtilsModule,\r\n    MatXtnSnackbarSuccessModule\r\n  ],\r\n  exports: [\r\n    MatXtnLoadingButtonModule,\r\n    MatXtnLoadingMessageModule,\r\n    MatXtnDialogsModule,\r\n    MatXtnUtilsModule,\r\n    MatXtnSnackbarSuccessModule\r\n  ]\r\n})\r\nexport class MatXtndModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MatXtnDialogsModule"
                        },
                        {
                            "name": "MatXtnLoadingButtonModule"
                        },
                        {
                            "name": "MatXtnLoadingMessageModule"
                        },
                        {
                            "name": "MatXtnSnackbarSuccessModule"
                        },
                        {
                            "name": "MatXtnUtilsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MatXtnDialogsModule"
                        },
                        {
                            "name": "MatXtnLoadingButtonModule"
                        },
                        {
                            "name": "MatXtnLoadingMessageModule"
                        },
                        {
                            "name": "MatXtnSnackbarSuccessModule"
                        },
                        {
                            "name": "MatXtnUtilsModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MatXtnLoadingButtonModule",
            "id": "module-MatXtnLoadingButtonModule-db6419bdfa00a80fa140919a05974dc171b1c43b299b600cb31983d27dc6ebdb337100e7e12608c7401a7fc78d9c7fe64417bcd8abb8516f59e3197a00bd6c4c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { MatXtndBusyComponent } from './busy/busy.component';\r\nimport { MatXtndReadyComponent } from './ready/ready.component';\r\nimport { MatXtndLoadingButtonComponent } from './loading-button.component';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  declarations: [\r\n    MatXtndBusyComponent,\r\n    MatXtndReadyComponent,\r\n    MatXtndLoadingButtonComponent\r\n  ],\r\n  exports: [\r\n    MatXtndBusyComponent,\r\n    MatXtndReadyComponent,\r\n    MatXtndLoadingButtonComponent\r\n  ]\r\n})\r\nexport class MatXtnLoadingButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MatXtndBusyComponent"
                        },
                        {
                            "name": "MatXtndLoadingButtonComponent"
                        },
                        {
                            "name": "MatXtndReadyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MatXtndBusyComponent"
                        },
                        {
                            "name": "MatXtndLoadingButtonComponent"
                        },
                        {
                            "name": "MatXtndReadyComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MatXtnLoadingMessageModule",
            "id": "module-MatXtnLoadingMessageModule-35413d1e0ad760268d88bf18fb1972528e0250b8f5d8e857a07e338df9e64a4eee17455224f646df46ffcf800f43031eca1d371b0bae4e223d82c38ef595677b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/mat-xtnd/src/lib/loading-message/loading-message.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatXtndLoadingMessageComponent } from \"./loading-message.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  declarations: [\r\n    MatXtndLoadingMessageComponent\r\n  ],\r\n  exports: [\r\n    MatXtndLoadingMessageComponent\r\n  ]\r\n})\r\nexport class MatXtnLoadingMessageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MatXtndLoadingMessageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MatXtndLoadingMessageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MatXtnSnackbarSuccessModule",
            "id": "module-MatXtnSnackbarSuccessModule-5c230db97e37a054386863a1ec1f73549f48c989d6315581a3c82eda5f2ebd112ddc851fe91641112faeadc49ff6cc8f0cb13b7548e8b77fea72a029a66fb6ae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/mat-xtnd/src/lib/snackbar-success/snackbar-succes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatXtnUtilsModule } from '../utils';\r\nimport { MatXtndSnackbarSuccessComponent, MatXtndSwooshAnimationComponent } from './components';\r\nimport { MatXtndSnackbarSuccessService } from './services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatSnackBarModule,\r\n        MatXtnUtilsModule\r\n    ],\r\n    declarations: [\r\n        MatXtndSwooshAnimationComponent,\r\n        MatXtndSnackbarSuccessComponent\r\n    ],\r\n    exports: [\r\n        MatXtndSwooshAnimationComponent,\r\n        MatXtndSnackbarSuccessComponent\r\n    ],\r\n    providers: [\r\n        MatXtndSnackbarSuccessService\r\n    ]\r\n})\r\nexport class MatXtnSnackbarSuccessModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MatXtndSnackbarSuccessService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MatXtndSnackbarSuccessComponent"
                        },
                        {
                            "name": "MatXtndSwooshAnimationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MatXtnUtilsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MatXtndSnackbarSuccessComponent"
                        },
                        {
                            "name": "MatXtndSwooshAnimationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MatXtnUtilsModule",
            "id": "module-MatXtnUtilsModule-f562751e7f3b9647949af8091ba0bc9f15530d501d591e63a76f565dc7c316ec9656ed0beaadfe46fa64ebac26cea861af7f571fc6b5a9c91a351bb1dd042575",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/mat-xtnd/src/lib/utils/utils.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatXtndThemeHelperComponent } from './components';\r\nimport { MatXtndCssInjectorService, MatXtndScriptInjectorService, MatXtndThemeColorFinderService } from './services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n    ],\r\n    declarations: [\r\n        MatXtndThemeHelperComponent\r\n    ],\r\n    exports: [\r\n        MatXtndThemeHelperComponent\r\n    ],\r\n    providers: [\r\n        MatXtndThemeColorFinderService,\r\n        MatXtndCssInjectorService,\r\n        MatXtndScriptInjectorService\r\n    ]\r\n})\r\nexport class MatXtnUtilsModule {\r\n  constructor(colorFinder: MatXtndThemeColorFinderService) {\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MatXtndCssInjectorService"
                        },
                        {
                            "name": "MatXtndScriptInjectorService"
                        },
                        {
                            "name": "MatXtndThemeColorFinderService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MatXtndThemeHelperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MatXtndThemeHelperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/modules/material/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatToolbarModule,\r\n  MatProgressSpinnerModule,\r\n  MatBadgeModule,\r\n  MatTooltipModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatExpansionModule,\r\n  MatTreeModule,\r\n  MatFormFieldModule,\r\n  MatSliderModule\r\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mat-xtnd/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "materialButtonAttrs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'mat-button',\r\n  'mat-raised-button',\r\n  'mat-icon-button',\r\n  'mat-fab',\r\n  'mat-mini-fab'\r\n]"
            },
            {
                "name": "MatXtndConfirmationDialogActionTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MatXtndConfirmationDialogActionType",
                "defaultValue": "{ OK: \"OK\", CANCEL: \"CANCEL\"}"
            },
            {
                "name": "MatXtndConfirmationDialogButtonLabelsDefaults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "{ OK: \"Ok\", CANCEL: \"Cancel\" }"
            },
            {
                "name": "MatXtndConfirmationDialogOKButtonLabelsDefaults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ OK: \"Ok\" }"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mat-xtnd/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"submit\" | \"reset\"",
                "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "LoadingBtnResponse",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "any",
                "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 130
            },
            {
                "name": "MatXtndConfirmationDialogActionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"OK\" | \"CANCEL\"",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "MatXtndConfirmationDialogButtonLabelsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MatXtndConfirmationDialogOkButtonLabelsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MatXtndConfirmationDialogOkParamsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MatXtndConfirmationDialogParamsDataType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MatXtndConfirmationDialogParamsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MatXtndMaterialColorType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"accent\" | \"warn\"",
                "file": "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "MatXtndMaterialColorValueType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "MatXtndSuccessSnackBarType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/mat-xtnd/src/lib/snackbar-success/components/snackbar-success/snackbar-success.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/modules/material/material.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/modules/material/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatToolbarModule,\r\n  MatProgressSpinnerModule,\r\n  MatBadgeModule,\r\n  MatTooltipModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatExpansionModule,\r\n  MatTreeModule,\r\n  MatFormFieldModule,\r\n  MatSliderModule\r\n]"
                }
            ],
            "projects/integration/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/mat-xtnd/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mat-xtnd/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mat-xtnd/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/integration/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "projects/integration/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts": [
                {
                    "name": "materialButtonAttrs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'mat-button',\r\n  'mat-raised-button',\r\n  'mat-icon-button',\r\n  'mat-fab',\r\n  'mat-mini-fab'\r\n]"
                }
            ],
            "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts": [
                {
                    "name": "MatXtndConfirmationDialogActionTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatXtndConfirmationDialogActionType",
                    "defaultValue": "{ OK: \"OK\", CANCEL: \"CANCEL\"}"
                },
                {
                    "name": "MatXtndConfirmationDialogButtonLabelsDefaults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "{ OK: \"Ok\", CANCEL: \"Cancel\" }"
                },
                {
                    "name": "MatXtndConfirmationDialogOKButtonLabelsDefaults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ OK: \"Ok\" }"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts": [
                {
                    "name": "ButtonTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"submit\" | \"reset\"",
                    "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "LoadingBtnResponse",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "any",
                    "file": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 130
                }
            ],
            "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts": [
                {
                    "name": "MatXtndConfirmationDialogActionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"OK\" | \"CANCEL\"",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "MatXtndConfirmationDialogButtonLabelsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "MatXtndConfirmationDialogOkButtonLabelsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "MatXtndConfirmationDialogOkParamsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "MatXtndConfirmationDialogParamsDataType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "MatXtndConfirmationDialogParamsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts": [
                {
                    "name": "MatXtndMaterialColorType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"accent\" | \"warn\"",
                    "file": "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "MatXtndMaterialColorValueType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "projects/mat-xtnd/src/lib/snackbar-success/components/snackbar-success/snackbar-success.component.ts": [
                {
                    "name": "MatXtndSuccessSnackBarType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/mat-xtnd/src/lib/snackbar-success/components/snackbar-success/snackbar-success.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "projects/integration/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/integration/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/integration/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/integration/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/integration/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndConfirmationDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MatXtndConfirmationDialogActionTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MatXtndConfirmationDialogButtonLabelsDefaults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/dialogs/components/confirmation-dialog/confirmation-dialog.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MatXtndConfirmationDialogOKButtonLabelsDefaults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/dialogs/services/confirmation-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MatXtndConfirmationDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/loading-button/busy/busy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndBusyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndLoadingButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/loading-button/loading-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "materialButtonAttrs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/loading-button/ready/ready.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndReadyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/loading-message/loading-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndLoadingMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/snackbar-success/components/snackbar-success/snackbar-success.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndSnackbarSuccessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/snackbar-success/components/swoosh-animation/swoosh-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndSwooshAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/snackbar-success/services/snackbar-success.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MatXtndSnackbarSuccessService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/utils/components/theme-helper/theme-helper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatXtndThemeHelperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/utils/services/css-injector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MatXtndCssInjectorService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/utils/services/script-injector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MatXtndScriptInjectorService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/lib/utils/services/theme-color-finder.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MatXtndThemeColorFinderService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mat-xtnd/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/examples/dialogs/dialogs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogsComponent",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "stories/examples/loading-button/loading-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/examples/loading-message/loading-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingMessageComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "stories/examples/snackbar-success/snackbar-success.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarSuccessComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "stories/modules/material/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}